This is a python lib, building names for very big numbers; together with a console application, using it.
Per default, we use the long scale system, as used in most parts of the EU; --shortScale or -s will use the us/uk system.
See http://de.wikipedia.org/wiki/Zahlennamen#Nomenklatur_f.C3.BCr_Zahlen_ab_1_000_000 and
https://en.wikipedia.org/wiki/Names_of_large_numbers
for details.

Usage
=====

say.py --help
usage: say.py [-G] [-GG] [-GGG] [-U] [-h] [-e] [-SL] [-v] [-c] [-C] [-s] [-n]
              [-f] [-u] [-b] [-l] [-g] [-d [DELIMITER]] [-L LOCALE] [-z | -r]
              [number]

Write names of (very) big numbers.

select one of these:
  number                say this number
  -G, --googol          say a googol (10^100)
  -GG, --googolplex     say a googolplex (10^googol)
  -GGG, --googolplexplex
                        say a googolplexplex (10^googolplex)
  -U, --universe        say the number of atoms in the universe

help:
  -h, --help            show this help message and exit
  -e, --example         show examples and exit
  -SL, --showLocales    show available locales and exit
  -v, --version         show program's version number and exit
  -c, --licence         show licence information and exit
  -C, --fullLicence     show licence file and exit; tries to download and save licence, if not available

optional arguments:
  -s, --shortScale      use american style: 1 000 000 000 is 1 billion; 1 milliarde if not set - implicit using -l
  -n, --numeric         say the number also in numeric form; it is not recommended to use this option with more than 1 000 000 digits
  -f, --force           ignore size warnings
  -u, --noUmlaut        use ue and oe instead of german umlaut; this might become handy, if you cannot change your terminal's encoding

format:
  -b, --byLine          write components line by line
  -l, --latinOnly       say "123 millionen" instead of "einhundertdreiundzwanzigmillionen"
  -g, --grouping        group thousand blocks; implicit using -n
  -d [DELIMITER], --delimiter [DELIMITER]
                        separate latin prefixes; using '-' if argument stands alone - this is very useful to understand how the numbers get build
  -L LOCALE, --locale LOCALE
                        locale for formatting numbers; only useful with -g/--grouping

number:
  -z, --zeros           do not say given number, but the number with that many zeros
  -r, --random          do not say given number, but a random number with that many digits

Examples
========

say.py --example shows complete examples.

say.py --zeros 9
milliarde

say.py --zeros --shortScale 9
billion

say.py 123
einhundertdreiundzwanzig

say.py 9999999345349583045894
neuntrilliardenneunhundertneunundneunzigtrillionenneunhundertneunundneunzigbilliardendreihundertfünfundvierzigbillionendreihundertneunundvierzigmilliardenfünfhundertdreiundachtzigmillionenfünfundvierzigtausendachthundertvierundneunzig

say.py --zeros 123
vigintilliarde

say.py --zeros 1000000
10 sesexagintazentillisesexagintaseszentilliarden

say.py --zeros 9999999345349583045894
100 millisesexagintaseszentillisesexagintaseszentilliseptenquinquagintaquingentillioktoquinquagintaquingentillitresexagintaduzentilliquadragintaoktingentilliduooktogintanongentillionen

say.py -z 9290823849028419271209381902381 --delimiter
100 mi-lli-okto-quadraginta-quingenti-lli-septuagintaquadringenti-lli-un-quadraginta-seszenti-lli-quattuor-quingenti-lli-ses-triginta-septingenti-lli-quinqua-quadraginta-quingenti-lli-un-duzenti-lli-tre-sexaginta-quingenti-lli-quinquagintaseszenti-lli-se-nonaginta-trezenti-lliarden

say.py --random 123
siebenhundertvierundsechzigvigintillioneneinhundertvierzignovendezilliardene ... izigtausenddreihundertvierzehn

say.py --random --latinOnly 123
398 vigintillionen 249 novendezilliarden 87 novendezillionen 534 oktodezilliarden 809 oktodezillionen ...

say.py --random --latinOnly --byLine 123
923 vigintillionen
910 novendezilliarden
...

say.py --random --latinOnly --numeric 123
217764231953087899423934113226947903488766240424414874685303342506908446655767312941208736464299524772777802411207853347868
217 vigintillionen 764 novendezilliarden 231 novendezillionen 953 oktodezilliarden 87 oktodezillionen ...

say.py --random --latinOnly --numeric --grouping 123
695.128.681.352.561.722.639.169 ...
695 vigintillionen 128 novendezilliarden  ...

say.py --googol --numeric --grouping
10.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000.000
zehnsedezilliarden

say.py --googolplex
10 millisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentillisesexagintaseszentilliarden

say.py --locale german -n 100000000000 -f -g
100.000.000.000
einhundertmilliarden

say.py --locale uk -n 100000000000 -f -g
100,000,000,000
einhundertmilliarden

Copyright (C) 2013 Daniel Marohn - daniel.marohn@gmail.com
This program is free software; find details at sayNumber/LICENCE or here:
https://raw.github.com/camillo/sayNumber/master/sayNumber/LICENSE
